#!/bin/sh

## SPDX-FileCopyrightText: 2023 Benjamin Grande M. S. <ben.grande.b@gmail.com>
##
## SPDX-License-Identifier: AGPL-3.0-or-later

# shellcheck disable=SC1090,SC1091
## Sourced by display manager, xinit and startx.

## Load requirements.
test -r "${HOME}/.profile" && . "${HOME}/.profile"
: "${XDG_CONFIG_HOME:=${HOME}/.config}"

## Load resources.
if command -v xrdb >/dev/null; then
  xrdb "${XDG_CONFIG_HOME}/x11/xresources"
fi

## If running normal OS or Qubes: Dom0, apply settings.
# shellcheck disable=3028
hostname="${HOSTNAME:-$(hostname)}"
if ! command -v qubesdb-read >/dev/null || test "${hostname}" = "dom0" ||
  test -f /var/run/qubes-service/guivm
then
  ## Decrease key repeat delay to X ms.
  ## Increase key repeat rate to Y per second.
  xset r rate 275 60

  ## Give Caps Lock a better use.
  ## ctrl:swapcaps seems better than caps:swapescape because ctrl is
  ## difficult to reach and escape can be done with 'caps+['.
  setxkbmap -keycodes "evdev+aliases(qwerty)" -model pc105 -layout us \
    -variant ,qwerty -option "" -option "grp:win_space_toggle,ctrl:nocaps"

  #qvm-prefs dom0 keyboard_layout "us+dvorak+grp:win_space_toggle,ctrl:nocaps"
fi
unset hostname

## Autostart desktop applications if the WM does not.
desktop_autostart(){
  if test -e "${TMPDIR:-/tmp}/touch-desktop-autostart"; then
    return 0
  fi

  touch -- "${TMPDIR:-/tmp}/touch-desktop-autostart"
  autostart_etc="${XDG_CONFIG_DIRS-/etc/xdg}/autostart"
  autostart_home="${XDG_CONFIG_HOME-${HOME}/.config}/autostart"

  for f in "${autostart_etc}"/*.desktop "${autostart_home}"/*.desktop; do
    test -r "${f}" || continue
    ## TODO: check other conditions: (Not|Only)ShowIn
    # shellcheck disable=SC2091
    autostart_hidden="$(awk -F '=' -- '/^Hidden=/{print $2}' "${f}")"
    if test "${autostart_hidden}" = "true"; then
      continue
    fi
    autostart_tryexec="$(awk -F '=' -- '/^TryExec=/{print $2}' "${f}")"
    if test -n "${autostart_tryexec}"; then
      case "${autostart_tryexec}" in
        /*) test -x "${autostart_tryexec}" || continue;;
        *) command -v "${autostart_tryexec}" >/dev/null || continue;;
      esac
    fi
    autostart_path="$(awk -F '=' -- '/^Path=/{print $2}' "${f}")"
    autostart_exec="$(awk -F '=' -- '/^Exec=/{print $2}' "${f}")"
    case "${autostart_exec}" in
      /*) test -x "${autostart_exec}" || continue;;
      *) command -v "${autostart_exec}" >/dev/null || continue;;
    esac
    if test -n "${autostart_path}"; then
      if ! test -d "${autostart_path}"; then
        continue
      fi
      cd "${autostart_path}" || continue
    fi
    ${autostart_exec} &
  done
  unset f autostart_hidden autostart_tryexec autostart_exec autostart_path
}

## Source Xorg profiles.
if test -r "${HOME}/.xprofile.local"; then
  . "${HOME}/.xprofile.local"
  for x11_profile in "${XDG_CONFIG_HOME}/x11/xprofile.d"/*.sh; do
    # shellcheck disable=SC1090,SC1091
    ! test -r "${x11_profile}" || . "${x11_profile}"
  done
  unset x11_profile
fi

: "${wm_list:="dwm"}"
for wm in ${wm_list}; do
  command -v "${wm}" >/dev/null || break
  if test "${wm}" = "dwm" && command -v xsetroot >/dev/null; then
    desktop_autostart
    while true; do
      xroot_name="$(display-statusbar)"
      xsetroot -name "${xroot_name}"
      unset xroot_name
      sleep 60
    done &
  fi
  # shellcheck disable=SC2093
  ${wm} &
  wm_pid="${!}"
done
unset wm

test -z "${wm_pid:-}" || wait "${wm_pid}"
unset wm_pid
